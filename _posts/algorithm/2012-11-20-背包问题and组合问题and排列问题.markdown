---
layout: post
title:  "背包问题-组合问题-排列问题"
date:   2012-11-20 15:36:55
categories: algorithm  
---
###问题：输出和为n的所有和式，不可有重复式。
(此为完全背包问题，采用容易理解的回朔递归法。
 同类的问题是：找零钱问题。)
此问题最先想到的是组合：1到n-1的数求组合，和为n的式子。
但是每个数字的个数可以多个，而且有限制，这就等同于完全背包了。

###组合问题与背包问题的关系：

1.无重复元素的集合的组合--01背包：在每个搜索点（每个元素）只考虑数字的有无。

2.有重复元素的集合组合---完全背包：在每个搜索点（每个元素）考虑数字的个数。

###想到有重复数字排列的问题。

问：求1231428的全排列。

以第一步为例：将1和后边的每一个数字交换，进入后边字串的排列问题中。但是不能与相同的数字交换。

	#include <iostream>  
	#include <stdlib.h>  
	using namespace std;  

	//输入整数n，输出所有的何为n的和式。  
	void step(int index,int currentsum,int* result,int length,int sum)  
	{  
		if(currentsum==0)  
		{  
			cout<<sum<<"=";  
			for(int i=0;i<length;i++)  
			{  
				if(result[i]>0)  
					cout<<(i+1)<<"*"<<result[i]<<"+";  
			}  
			cout<<endl;  
			return;  
		}  
		if(index>=sum)  
			return;  
		int n=0;  
		while((n*index)<=currentsum)  
		{  
			result[index-1]=n;  
			step(index+1,currentsum-n*index,result,length,sum);  
			result[index-1]=0;  
			n++;  
		}  
	}  
	void AllSum(int n)  
	{  
		if(n<=1)  
			exit(1);  
		int* result=new int[n-1];  
		step(1,n,result,n-1,n);  
		delete[] result;  
	}  
	int main(){  
		int n;  
		cout<<"n="<<endl;  
		cin>>n;  
		AllSum(n);  
		return 0;  
	}  
